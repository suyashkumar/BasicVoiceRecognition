function [R,Word,W,Rall] = GuessP(FftIn)
%%Guess.m
%%Takes an input and compares it to pre-recorded words.  Compares these
%%values and estimates the vowel type of the mono-syllabic word.
%%@author: Brendon Colbert

%Load Data
load MurphyVowelData.mat
WordMap=WordMapExtended;
FftIn=periodogram(FftIn);
%Normalize
FftIn = (FftIn)./max((FftIn(:)));

%Cutoff Lower Frequencies
FftIn = (FftIn.*(FftIn > .20));

keys=WordMap.keys();
for i=1:WordMap.length()
    currentKey=keys{i}; % get current key
    currentBatch=WordMap(currentKey);
    F2 = currentBatch{1};
    %Transform to Frequency Domain
    [Y2x,Y2]=periodogram(F2);
    
    TY2=(Y2)./max((Y2(:)));
    TY2=(TY2.*(TY2 > .20));
    
    %Difference Value Calculation
    Sr(i) = sum((FftIn - TY2).^2)
end

R = Sr;
r = Sr;
rt = r;

R(1) = min(r);
rt(find(r == R(1))) = NaN; 
R(2) = min(rt);
rt(find(r == R(2))) = NaN;
R(3) = min(rt);

test=find(r==R(1));
Word={}
Word{1} = keys{test};
Word{2} = keys{find(r == R(2))};
Word{3} = keys{find(r == R(3))};
Rall = r;

currentKey=keys{find(r==R(1))};
currentBatch=WordMap(currentKey);
F2 = currentBatch{1};
[Y2x,Y2]=periodogram(F2);
TY2=(Y2)./max((Y2(:)));
TY2=(TY2.*(TY2 > .20));

%Vowel Sound
W = char(Word(1))
if W(2) == 'a'
    W = 'a';
elseif W(2) == 'i'
    W = 'i';
elseif W(2) == 'u'
    W = 'u';
end

figure(2)
plot(Y2x,TY2)
hold on
plot(FftInx,FftIn,'g')
hold off
title('Frequency Analysis of Top Result')